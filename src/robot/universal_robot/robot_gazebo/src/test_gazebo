#!/usr/bin/env python3
import time
import roslib
import rospy
import actionlib
from control_msgs.msg import *
from trajectory_msgs.msg import *


if __name__ == '__main__':
    
    rospy.init_node("test_gazebo", disable_signals=True)

    robot_client = actionlib.SimpleActionClient('/kr20/kr20_joint_controller/follow_joint_trajectory', FollowJointTrajectoryAction)

    print("Waiting for server...")
    robot_client.wait_for_server()
    print("Connected to server")

    joint_names = ['q1', 'q2', 'q3', 'q4', 'q5', 'q6','q7','q8']
    Q0 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

    g = FollowJointTrajectoryGoal()
    g.trajectory = JointTrajectory()
    g.trajectory.joint_names = joint_names


    # Posicion inicial ajustada a las restricciones de las articulaciones
    Q0 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(1)

    # Empieza secuencia de movimientos 
    Q0 = [0.0, -0.190, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)


    Q0 = [0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    Q0 = [0.0, 0.2, 1.0, 0.0, 0.0, -1.57, 0.0, 0.0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    Q0 = [0.0, 0.2, 0.0, 1.57, 2.5, -1.57, 3.0, 0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    Q0 = [0.0, 0.2, 0.0, 1.57, 2.5, 0, 3.0, 0.1]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    Q0 = [0.0, 0.2, 0.0, 1.57, 2.5, 0.0, 0.0, 0.1]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    Q0 = [-0.5, 0.2, 0.0, 1.57, 2.5, 0.0, 0.0, 0.0]
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*8,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(0.5)

    robot_client.cancel_goal()
